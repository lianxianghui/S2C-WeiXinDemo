// LXHContactsViewController.m
// WeiXinDemo
//
//  Created by lianxianghui on 21-08-9
//  Generated by Sketch2Code
//  Copyright © 2021年 lianxianghui. All rights reserved.

#import "LXHContactsViewController.h"
#import "LXHContactsView.h"
#import "LXHContactsViewModel.h"
#import "LXHContactCell.h"
#import "LXHContactsIndexCell.h"
#import "Masonry.h"

#define UIColorFromRGBA(rgbaValue) \
[UIColor colorWithRed:((rgbaValue & 0xFF000000) >> 24)/255.0 \
        green:((rgbaValue & 0x00FF0000) >>  16)/255.0 \
        blue:((rgbaValue & 0x0000FF00) >>  8)/255.0 \
        alpha:(rgbaValue & 0x000000FF)/255.0]
    
@interface LXHContactsViewController() <UITableViewDataSource, UITableViewDelegate>
@property (nonatomic) LXHContactsView *contentView;
@property (nonatomic) LXHContactsViewModel *viewModel;
@end

@implementation LXHContactsViewController

- (instancetype)initWithViewModel:(id)viewModel {
    self = [super init];
    if (self) {
        self.viewModel = viewModel;
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = UIColorFromRGBA(0x38363CFF);
    [self.navigationController setNavigationBarHidden:YES animated:NO];
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.contentView = [[LXHContactsView alloc] init];
    [self.view addSubview:self.contentView];
    [self.contentView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.mas_topLayoutGuideBottom);
        make.left.right.equalTo(self.view);
        make.bottom.equalTo(self.mas_bottomLayoutGuideTop);
    }];
    UISwipeGestureRecognizer *swipeRecognizer = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(swipeView:)];
    [self.view addGestureRecognizer:swipeRecognizer];
    [self addActions];
    [self setDelegates];
}

- (void)swipeView:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}

- (UIStatusBarStyle)preferredStatusBarStyle {
    return UIStatusBarStyleLightContent;
}

- (void)addActions {
    [self.contentView.rightButton addTarget:self action:@selector(rightButtonClicked:) forControlEvents:UIControlEventTouchUpInside];
}

- (void)setDelegates {
    self.contentView.listView.dataSource = self;
    self.contentView.listView.delegate = self;
}
//Actions
- (void)rightButtonClicked:(UIButton *)sender {
    sender.alpha = 1;

}

//Delegate Methods
- (NSArray *)dataForTableView:(UITableView *)tableView {
    if (tableView == self.contentView.listView) {
        return [self.viewModel cellDataArrayForListView];
    }
    return nil;
}

- (id)cellDataForTableView:(UITableView *)tableView atIndexPath:(NSIndexPath *)indexPath {
    NSArray *dataForTableView = [self dataForTableView:tableView];
    if (indexPath.row < dataForTableView.count)
        return [dataForTableView objectAtIndex:indexPath.row];
    else
        return nil;
}

- (NSString *)tableView:(UITableView *)tableView cellTypeAtIndexPath:(NSIndexPath *)indexPath {
    NSArray *data = [self dataForTableView:tableView];
    if (indexPath.row < data.count) {
        NSDictionary *cellData = [data objectAtIndex:indexPath.row];
        return [cellData valueForKey:@"cellType"];
    }
    return nil;
}

- (NSInteger)tableView:(UITableView *)tableView viewTagAtIndexPath:(NSIndexPath *)indexPath {
    NSString *cellType = [self tableView:tableView cellTypeAtIndexPath:indexPath];
    if ([cellType isEqualToString:@"LXHContactsIndexCell"])
        return 100;
    if ([cellType isEqualToString:@"LXHContactCell"])
        return 101;
    return -1;
}

- (NSString *)tableView:(UITableView *)tableView cellContentViewClassStingAtIndexPath:(NSIndexPath *)indexPath {
    NSString *cellType = [self tableView:tableView cellTypeAtIndexPath:indexPath];
    NSString *classString = cellType;
    return classString;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return [self dataForTableView:tableView].count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSString *cellType = [self tableView:tableView cellTypeAtIndexPath:indexPath];
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellType];
    NSInteger tag = [self tableView:tableView viewTagAtIndexPath:indexPath];
    id dataForRow = [self cellDataForTableView:tableView atIndexPath:indexPath];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellType];
        NSString *viewClass = [self tableView:tableView cellContentViewClassStingAtIndexPath:indexPath];
        UIView *view = [[NSClassFromString(viewClass) alloc] init];
        view.tag = tag;
        [cell.contentView addSubview:view];
        cell.contentView.backgroundColor = [UIColor clearColor];
        cell.backgroundColor = [UIColor clearColor];
        [view mas_makeConstraints:^(MASConstraintMaker *make) {
            make.edges.equalTo(cell.contentView);
        }];
        NSString *clickable = [dataForRow valueForKey:@"clickable"];
        if ([clickable isEqualToString:@"0"])
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    UIView *view = [cell.contentView viewWithTag:tag];
    if ([cellType isEqualToString:@"LXHContactsIndexCell"]) {
        LXHContactsIndexCell *cellView = (LXHContactsIndexCell *)view;
        NSString *label = [dataForRow valueForKey:@"label"];
        if (!label || [label isEqualToString:@""])
            label = @" "; //must have character
        NSMutableAttributedString *labelAttributedString = [cellView.label.attributedText mutableCopy];
        if (labelAttributedString && ![label isEqualToString:labelAttributedString.string]) {
            [labelAttributedString.mutableString setString:label];
            cellView.label.attributedText = labelAttributedString;
        }

    }
    if ([cellType isEqualToString:@"LXHContactCell"]) {
        LXHContactCell *cellView = (LXHContactCell *)view;
        NSString *name = [dataForRow valueForKey:@"name"];
        if (!name || [name isEqualToString:@""])
            name = @" "; //must have character
        NSMutableAttributedString *nameAttributedString = [cellView.name.attributedText mutableCopy];
        if (nameAttributedString && ![name isEqualToString:nameAttributedString.string]) {
            [nameAttributedString.mutableString setString:name];
            cellView.name.attributedText = nameAttributedString;
        }

        NSString *leftImageImageName = [dataForRow valueForKey:@"leftImage"];
        if (leftImageImageName)
            cellView.leftImage.image = [UIImage imageNamed:leftImageImageName];

    }

    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSString *cellType = [self tableView:tableView cellTypeAtIndexPath:indexPath];
    if ([cellType isEqualToString:@"LXHContactsIndexCell"])
        return 20;
    if ([cellType isEqualToString:@"LXHContactCell"])
        return 50;
    return 0;
}

- (NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    id dataForRow = [self cellDataForTableView:tableView atIndexPath:indexPath];
    NSString *clickable = [dataForRow valueForKey:@"clickable"];
    if ([clickable isEqualToString:@"0"])
        return nil;
    else
        return indexPath;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if (tableView == self.contentView.listView) {
        switch(indexPath.row) {
            default:
                break;
        }
    }
}


@end
