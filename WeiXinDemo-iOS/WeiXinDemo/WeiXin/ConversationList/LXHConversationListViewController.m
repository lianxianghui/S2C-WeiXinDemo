// LXHConversationListViewController.m
// WeiXinDemo
//
//  Created by lianxianghui on 21-08-18
//  Generated by Sketch2Code
//  Copyright © 2021年 lianxianghui. All rights reserved.

#import "LXHConversationListViewController.h"
#import "LXHConversationListView.h"
#import "LXHConversationListViewModel.h"
#import "LXHConversationListConversationCell.h"
#import "LXHConversationListLoginStatusCell.h"
#import "Masonry.h"

#define UIColorFromRGBA(rgbaValue) \
[UIColor colorWithRed:((rgbaValue & 0xFF000000) >> 24)/255.0 \
        green:((rgbaValue & 0x00FF0000) >>  16)/255.0 \
        blue:((rgbaValue & 0x0000FF00) >>  8)/255.0 \
        alpha:(rgbaValue & 0x000000FF)/255.0]
    
@interface LXHConversationListViewController() <UITableViewDataSource, UITableViewDelegate>
@property (nonatomic) LXHConversationListView *contentView;
@property (nonatomic) LXHConversationListViewModel *viewModel;
@end

@implementation LXHConversationListViewController

- (instancetype)initWithViewModel:(id)viewModel {
    self = [super init];
    if (self) {
        self.viewModel = viewModel;
    }
    return self;
}

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = UIColorFromRGBA(0x38363CFF);
    [self.navigationController setNavigationBarHidden:YES animated:NO];
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.contentView = [[LXHConversationListView alloc] init];
    [self.view addSubview:self.contentView];
    [self.contentView mas_makeConstraints:^(MASConstraintMaker *make) {
        make.top.equalTo(self.mas_topLayoutGuideBottom);
        make.left.right.equalTo(self.view);
        make.bottom.equalTo(self.mas_bottomLayoutGuideTop);
    }];
    UISwipeGestureRecognizer *swipeRecognizer = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(swipeView:)];
    [self.view addGestureRecognizer:swipeRecognizer];
    [self addActions];
    [self setDelegates];
}

- (void)swipeView:(id)sender {
    [self.navigationController popViewControllerAnimated:YES];
}

- (UIStatusBarStyle)preferredStatusBarStyle {
    return UIStatusBarStyleLightContent;
}

- (void)addActions {
    [self.contentView.rightButton addTarget:self action:@selector(rightButtonClicked:) forControlEvents:UIControlEventTouchUpInside];
}

- (void)setDelegates {
    self.contentView.listView.dataSource = self;
    self.contentView.listView.delegate = self;
}
//Actions
- (void)rightButtonClicked:(UIButton *)sender {
    sender.alpha = 1;

}

//Delegate Methods
- (NSArray *)dataForTableView:(UITableView *)tableView {
    if (tableView == self.contentView.listView) {
        return [self.viewModel cellDataArrayForListView];
    }
    return nil;
}

- (id)cellDataForTableView:(UITableView *)tableView atIndexPath:(NSIndexPath *)indexPath {
    NSArray *dataForTableView = [self dataForTableView:tableView];
    if (indexPath.row < dataForTableView.count)
        return [dataForTableView objectAtIndex:indexPath.row];
    else
        return nil;
}

- (NSString *)tableView:(UITableView *)tableView cellTypeAtIndexPath:(NSIndexPath *)indexPath {
    NSArray *data = [self dataForTableView:tableView];
    if (indexPath.row < data.count) {
        NSDictionary *cellData = [data objectAtIndex:indexPath.row];
        return [cellData valueForKey:@"cellType"];
    }
    return nil;
}

- (NSString *)tableView:(UITableView *)tableView cellContentViewClassStingAtIndexPath:(NSIndexPath *)indexPath {
    NSString *cellType = [self tableView:tableView cellTypeAtIndexPath:indexPath];
    NSString *classString = cellType;
    return classString;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return [self dataForTableView:tableView].count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSString *cellType = [self tableView:tableView cellTypeAtIndexPath:indexPath];
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:cellType];
    NSInteger tag = 100;
    id dataForRow = [self cellDataForTableView:tableView atIndexPath:indexPath];
    if (!cell) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:cellType];
        NSString *viewClass = [self tableView:tableView cellContentViewClassStingAtIndexPath:indexPath];
        UIView *view = [[NSClassFromString(viewClass) alloc] init];
        view.tag = tag;
        [cell.contentView addSubview:view];
        cell.contentView.backgroundColor = [UIColor clearColor];
        cell.backgroundColor = [UIColor clearColor];
        [view mas_makeConstraints:^(MASConstraintMaker *make) {
            make.edges.equalTo(cell.contentView);
        }];
        NSString *clickable = [dataForRow valueForKey:@"clickable"];
        if ([clickable isEqualToString:@"0"])
            cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    UIView *view = [cell.contentView viewWithTag:tag];
    if ([cellType isEqualToString:@"LXHConversationListConversationCell"]) {
        LXHConversationListConversationCell *cellView = (LXHConversationListConversationCell *)view;
        NSString *time = [dataForRow valueForKey:@"time"];
        if (!time || [time isEqualToString:@""])
            time = @" "; //must have character
        NSMutableAttributedString *timeAttributedString = [cellView.time.attributedText mutableCopy];
        if (timeAttributedString && ![time isEqualToString:timeAttributedString.string]) {
            [timeAttributedString.mutableString setString:time];
            cellView.time.attributedText = timeAttributedString;
        }

        NSString *latestMessage = [dataForRow valueForKey:@"latestMessage"];
        if (!latestMessage || [latestMessage isEqualToString:@""])
            latestMessage = @" "; //must have character
        NSMutableAttributedString *latestMessageAttributedString = [cellView.latestMessage.attributedText mutableCopy];
        if (latestMessageAttributedString && ![latestMessage isEqualToString:latestMessageAttributedString.string]) {
            [latestMessageAttributedString.mutableString setString:latestMessage];
            cellView.latestMessage.attributedText = latestMessageAttributedString;
        }

        NSString *title = [dataForRow valueForKey:@"title"];
        if (!title || [title isEqualToString:@""])
            title = @" "; //must have character
        NSMutableAttributedString *titleAttributedString = [cellView.title.attributedText mutableCopy];
        if (titleAttributedString && ![title isEqualToString:titleAttributedString.string]) {
            [titleAttributedString.mutableString setString:title];
            cellView.title.attributedText = titleAttributedString;
        }

        NSString *noDisturbingImageImageName = [dataForRow valueForKey:@"noDisturbingImage"];
        if (noDisturbingImageImageName)
            cellView.noDisturbingImage.image = [UIImage imageNamed:noDisturbingImageImageName];

        NSString *leftImageImageName = [dataForRow valueForKey:@"leftImage"];
        if (leftImageImageName)
            cellView.leftImage.image = [UIImage imageNamed:leftImageImageName];

        cellView.noDisturbingImage.hidden = [[dataForRow valueForKey:@"noDisturbingImageHidden"] boolValue];
        cellView.latestMessage.hidden = [[dataForRow valueForKey:@"latestMessageHidden"] boolValue];
        cellView.circle.hidden = [[dataForRow valueForKey:@"circleHidden"] boolValue];
    }
    if ([cellType isEqualToString:@"LXHConversationListLoginStatusCell"]) {
        LXHConversationListLoginStatusCell *cellView = (LXHConversationListLoginStatusCell *)view;
        NSString *statusLabel = [dataForRow valueForKey:@"statusLabel"];
        if (!statusLabel || [statusLabel isEqualToString:@""])
            statusLabel = @" "; //must have character
        NSMutableAttributedString *statusLabelAttributedString = [cellView.statusLabel.attributedText mutableCopy];
        if (statusLabelAttributedString && ![statusLabel isEqualToString:statusLabelAttributedString.string]) {
            [statusLabelAttributedString.mutableString setString:statusLabel];
            cellView.statusLabel.attributedText = statusLabelAttributedString;
        }

        NSString *statusImageImageName = [dataForRow valueForKey:@"statusImage"];
        if (statusImageImageName)
            cellView.statusImage.image = [UIImage imageNamed:statusImageImageName];

    }

    return cell;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    NSString *cellType = [self tableView:tableView cellTypeAtIndexPath:indexPath];
    if ([cellType isEqualToString:@"LXHConversationListConversationCell"])
        return 60;
    if ([cellType isEqualToString:@"LXHConversationListLoginStatusCell"])
        return 40;
    return 0;
}

- (NSIndexPath *)tableView:(UITableView *)tableView willSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    id dataForRow = [self cellDataForTableView:tableView atIndexPath:indexPath];
    NSString *clickable = [dataForRow valueForKey:@"clickable"];
    if ([clickable isEqualToString:@"0"])
        return nil;
    else
        return indexPath;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    if (tableView == self.contentView.listView) {
        switch(indexPath.row) {
            default:
                break;
        }
    }
}


@end
