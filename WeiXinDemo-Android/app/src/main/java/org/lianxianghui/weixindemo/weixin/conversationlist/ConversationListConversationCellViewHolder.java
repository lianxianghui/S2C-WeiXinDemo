package org.lianxianghui.weixindemo.weixin.conversationlist;

import androidx.recyclerview.widget.RecyclerView;
import android.widget.Space;
import androidx.appcompat.widget.AppCompatTextView;
import android.content.Intent;
import androidx.core.graphics.drawable.RoundedBitmapDrawableFactory;
import androidx.appcompat.widget.AppCompatImageView;
import org.lianxianghui.weixindemo.R;
import androidx.core.graphics.drawable.RoundedBitmapDrawable;
import android.graphics.Bitmap;
import android.view.KeyEvent;
import android.view.LayoutInflater;
import android.graphics.BitmapFactory;
import android.view.View;
import android.widget.TextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import android.view.ViewGroup;

/**
* Generated by Sketch2Code
* Created by lianxianghui on 21-08-6.
*/

public class ConversationListConversationCellViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
    private ConversationListConversationCellData mConversationListConversationCellData;

    private View mBottomLine;
    private AppCompatImageView mNoDisturbingImage;
    private AppCompatTextView mTime;
    private AppCompatTextView mLatestMessage;
    private AppCompatTextView mTitle;
    private AppCompatImageView mLeftImage;
    private ConstraintLayout mCircle;
    private Space mPointForCenteryOfCircle;
    private Space mPointForCenterxOfCircle;
    private Space mPointForBottomOfTitleToTopOfLeftImage;

    public ConversationListConversationCellViewHolder(LayoutInflater inflater, ViewGroup parent) {
        super(inflater.inflate(R.layout.conversation_list_conversation_cell, parent, false));
        View v = itemView;
        mBottomLine = v.findViewById(R.id.bottom_line);
        mNoDisturbingImage = (AppCompatImageView) v.findViewById(R.id.no_disturbing_image);
        mTime = (AppCompatTextView) v.findViewById(R.id.time);
        mLatestMessage = (AppCompatTextView) v.findViewById(R.id.latest_message);
        mTitle = (AppCompatTextView) v.findViewById(R.id.title);
        mLeftImage = (AppCompatImageView) v.findViewById(R.id.left_image);
        mCircle = (ConstraintLayout) v.findViewById(R.id.circle);
        mPointForCenteryOfCircle = (Space) v.findViewById(R.id.point_for_centery_of_circle);
        mPointForCenterxOfCircle = (Space) v.findViewById(R.id.point_for_centerx_of_circle);
        mPointForBottomOfTitleToTopOfLeftImage = (Space) v.findViewById(R.id.point_for_bottom_of_title_to_top_of_left_image);
    }

    public void bind(ConversationListConversationCellData conversationListConversationCell) {
        mConversationListConversationCellData = conversationListConversationCell;
        mTime.setText(mConversationListConversationCellData.getTime());
        mLatestMessage.setText(mConversationListConversationCellData.getLatestMessage());
        mTitle.setText(mConversationListConversationCellData.getTitle());
        String imageName = mConversationListConversationCellData.getNoDisturbingImage();
        if (imageName != null) {
            int noDisturbingImageResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (noDisturbingImageResId != 0)
                mNoDisturbingImage.setImageResource(noDisturbingImageResId);
        }
        imageName = mConversationListConversationCellData.getLeftImage();
        if (imageName != null) {
            int leftImageResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (leftImageResId != 0)
                mLeftImage.setImageResource(leftImageResId);
        }
        boolean clickable = mConversationListConversationCellData.getClickable();
        if (clickable) {
            itemView.setEnabled(true);
            itemView.setOnClickListener(this);
        } else {
            itemView.setEnabled(false);
            itemView.setOnClickListener(null);
        }
        boolean hidden = mConversationListConversationCellData.getNoDisturbingImageHidden();
        if (hidden)
            mNoDisturbingImage.setVisibility(View.INVISIBLE);
        else
            mNoDisturbingImage.setVisibility(View.VISIBLE);
        hidden = mConversationListConversationCellData.getLatestMessageHidden();
        if (hidden)
            mLatestMessage.setVisibility(View.INVISIBLE);
        else
            mLatestMessage.setVisibility(View.VISIBLE);
        hidden = mConversationListConversationCellData.getCircleHidden();
        if (hidden)
            mCircle.setVisibility(View.INVISIBLE);
        else
            mCircle.setVisibility(View.VISIBLE);
    }

    @Override
    public void onClick(View view) {

    }






}

class ConversationListConversationCellData {
    private String mCellId;
    private boolean mNoDisturbingImageHidden;
    private String mNoDisturbingImage;
    private String mTime;
    private boolean mLatestMessageHidden;
    private String mTitle;
    private String mLatestMessage;
    private boolean mCircleHidden;
    private boolean mClickable;
    private String mLeftImage;

    public String getCellId() {
        return mCellId;
    }

    public void setCellId(String cellId) {
        mCellId = cellId;
    }
    public boolean getNoDisturbingImageHidden() {
        return mNoDisturbingImageHidden;
    }

    public void setNoDisturbingImageHidden(boolean noDisturbingImageHidden) {
        mNoDisturbingImageHidden = noDisturbingImageHidden;
    }
    public String getNoDisturbingImage() {
        return mNoDisturbingImage;
    }

    public void setNoDisturbingImage(String noDisturbingImage) {
        mNoDisturbingImage = noDisturbingImage;
    }
    public String getTime() {
        return mTime;
    }

    public void setTime(String time) {
        mTime = time;
    }
    public boolean getLatestMessageHidden() {
        return mLatestMessageHidden;
    }

    public void setLatestMessageHidden(boolean latestMessageHidden) {
        mLatestMessageHidden = latestMessageHidden;
    }
    public String getTitle() {
        return mTitle;
    }

    public void setTitle(String title) {
        mTitle = title;
    }
    public String getLatestMessage() {
        return mLatestMessage;
    }

    public void setLatestMessage(String latestMessage) {
        mLatestMessage = latestMessage;
    }
    public boolean getCircleHidden() {
        return mCircleHidden;
    }

    public void setCircleHidden(boolean circleHidden) {
        mCircleHidden = circleHidden;
    }
    public boolean getClickable() {
        return mClickable;
    }

    public void setClickable(boolean clickable) {
        mClickable = clickable;
    }
    public String getLeftImage() {
        return mLeftImage;
    }

    public void setLeftImage(String leftImage) {
        mLeftImage = leftImage;
    }
}
