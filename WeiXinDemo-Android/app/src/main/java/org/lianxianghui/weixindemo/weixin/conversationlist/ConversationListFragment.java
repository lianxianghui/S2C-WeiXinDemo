package org.lianxianghui.weixindemo.weixin.conversationlist;

import androidx.fragment.app.Fragment;
import androidx.appcompat.widget.AppCompatTextView;
import android.graphics.Bitmap;
import android.view.View;
import java.util.ArrayList;
import android.view.KeyEvent;
import androidx.constraintlayout.widget.ConstraintLayout;
import java.util.List;
import androidx.core.graphics.drawable.RoundedBitmapDrawableFactory;
import org.lianxianghui.weixindemo.R;
import android.view.ViewGroup;
import android.os.Bundle;
import android.graphics.BitmapFactory;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.core.graphics.drawable.RoundedBitmapDrawable;
import androidx.appcompat.widget.AppCompatButton;
import android.content.Intent;
import android.widget.TextView;
import android.view.LayoutInflater;
import android.widget.Space;
import androidx.recyclerview.widget.RecyclerView;

/**
* Generated by Sketch2Code
* Created by lianxianghui on 21-08-18.
*/

public class ConversationListFragment extends Fragment {
    private static final String TAG = "ConversationListFragment";
    private ConstraintLayout contentView;
    private RecyclerView listView;
    private ConstraintLayout customNavigationBar;
    private View bottomLine;
    private ConstraintLayout rightButtonContainer;
    private AppCompatButton rightButton;
    private AppCompatImageView addIcon;
    private View circle;
    private Space pointForCenteryOfRightButton;
    private Space pointForCenteryOfAddIcon;
    private AppCompatTextView title;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View v = inflater.inflate(R.layout.conversation_list_fragment, container, false);
 
        contentView = (ConstraintLayout) v.findViewById(R.id.content_view);
        listView = (RecyclerView) v.findViewById(R.id.list_view);
        listView.setLayoutManager(new LinearLayoutManager(getActivity()));
        updateListView();
        customNavigationBar = (ConstraintLayout) v.findViewById(R.id.custom_navigation_bar);
        bottomLine = v.findViewById(R.id.bottom_line);
        rightButtonContainer = (ConstraintLayout) v.findViewById(R.id.right_button_container);
        rightButton = (AppCompatButton) v.findViewById(R.id.right_button);
        rightButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

            }
        });
        addIcon = (AppCompatImageView) v.findViewById(R.id.add_icon);
        circle = v.findViewById(R.id.circle);
        pointForCenteryOfRightButton = (Space) v.findViewById(R.id.point_for_centery_of_right_button);
        pointForCenteryOfAddIcon = (Space) v.findViewById(R.id.point_for_centery_of_add_icon);
        title = (AppCompatTextView) v.findViewById(R.id.title);
        return v;
    }

    private ListViewAdapter listViewAdapter;
    private void updateListView() {
        List<Object> dataList  = getListViewDataList();
        listViewAdapter = new ListViewAdapter(dataList);
        listView.setAdapter(listViewAdapter);
    }

    private List<Object> getListViewDataList() {
        ArrayList<Object> list = new ArrayList<Object>();

        ConversationListLoginStatusCellData cellData0 = new ConversationListLoginStatusCellData();
        cellData0.setStatusLabel("Mac微信已登录，手机通知已关闭");
        cellData0.setCellId("0");
        cellData0.setClickable(true);
        cellData0.setStatusImage("weixin_conversation_list_login_status_cell_status_image");
        list.add(cellData0);

        ConversationListConversationCellData cellData1 = new ConversationListConversationCellData();
        cellData1.setCellId("0");
        cellData1.setNoDisturbingImageHidden(false);
        cellData1.setNoDisturbingImage("weixin_conversationlist_no_disturbing_image");
        cellData1.setTime("下午7:18");
        cellData1.setLatestMessageHidden(false);
        cellData1.setTitle("运动旅游活动群");
        cellData1.setLatestMessage("摄影师丰枫：这个可以有");
        cellData1.setCircleHidden(false);
        cellData1.setClickable(true);
        cellData1.setLeftImage("weixin_conversationlist_group_image");
        list.add(cellData1);

        ConversationListConversationCellData cellData2 = new ConversationListConversationCellData();
        cellData2.setCellId("1");
        cellData2.setNoDisturbingImageHidden(false);
        cellData2.setNoDisturbingImage("weixin_conversationlist_no_disturbing_image");
        cellData2.setTime("下午10:41");
        cellData2.setTitle("订阅号");
        cellData2.setLatestMessage("晨光图书礼品：平安夜 | 真平安");
        cellData2.setClickable(true);
        cellData2.setLeftImage("weixin_conversationlist_subscription_image");
        list.add(cellData2);

        ConversationListConversationCellData cellData3 = new ConversationListConversationCellData();
        cellData3.setCellId("2");
        cellData3.setNoDisturbingImageHidden(true);
        cellData3.setNoDisturbingImage("weixin_conversation_list_conversation_cell_no_disturbing_image");
        cellData3.setTime("上午8:49");
        cellData3.setLatestMessageHidden(true);
        cellData3.setTitle("文件传输助手");
        cellData3.setLatestMessage(" ");
        cellData3.setCircleHidden(true);
        cellData3.setClickable(true);
        cellData3.setLeftImage("weixin_conversationlist_file_transfer");
        list.add(cellData3);

        ConversationListConversationCellData cellData4 = new ConversationListConversationCellData();
        cellData4.setCellId("3");
        cellData4.setNoDisturbingImageHidden(true);
        cellData4.setNoDisturbingImage("weixin_conversation_list_conversation_cell_no_disturbing_image");
        cellData4.setTime("下午5:16");
        cellData4.setTitle("连向辉");
        cellData4.setLatestMessage("[图片]");
        cellData4.setClickable(true);
        cellData4.setLeftImage("weixin_conversationlist_person_image");
        list.add(cellData4);

        ConversationListConversationCellData cellData5 = new ConversationListConversationCellData();
        cellData5.setCellId("4");
        cellData5.setNoDisturbingImageHidden(false);
        cellData5.setNoDisturbingImage("weixin_conversationlist_no_disturbing_image");
        cellData5.setTime("下午7:18");
        cellData5.setTitle("运动旅游活动群");
        cellData5.setLatestMessage("摄影师丰枫：这个可以有");
        cellData5.setClickable(true);
        cellData5.setLeftImage("weixin_conversationlist_group_image");
        list.add(cellData5);

        ConversationListConversationCellData cellData6 = new ConversationListConversationCellData();
        cellData6.setCellId("5");
        cellData6.setNoDisturbingImageHidden(false);
        cellData6.setNoDisturbingImage("weixin_conversationlist_no_disturbing_image");
        cellData6.setTime("下午7:18");
        cellData6.setTitle("运动旅游活动群");
        cellData6.setLatestMessage("摄影师丰枫：这个可以有");
        cellData6.setClickable(true);
        cellData6.setLeftImage("weixin_conversationlist_group_image");
        list.add(cellData6);

        ConversationListConversationCellData cellData7 = new ConversationListConversationCellData();
        cellData7.setCellId("6");
        cellData7.setNoDisturbingImageHidden(false);
        cellData7.setNoDisturbingImage("weixin_conversationlist_no_disturbing_image");
        cellData7.setTime("下午7:18");
        cellData7.setTitle("运动旅游活动群");
        cellData7.setLatestMessage("摄影师丰枫：这个可以有");
        cellData7.setClickable(true);
        cellData7.setLeftImage("weixin_conversationlist_group_image");
        list.add(cellData7);

        ConversationListConversationCellData cellData8 = new ConversationListConversationCellData();
        cellData8.setCellId("7");
        cellData8.setNoDisturbingImageHidden(false);
        cellData8.setNoDisturbingImage("weixin_conversationlist_no_disturbing_image");
        cellData8.setTime("下午7:18");
        cellData8.setTitle("运动旅游活动群");
        cellData8.setLatestMessage("摄影师丰枫：这个可以有");
        cellData8.setClickable(true);
        cellData8.setLeftImage("weixin_conversationlist_group_image");
        list.add(cellData8);

        ConversationListConversationCellData cellData9 = new ConversationListConversationCellData();
        cellData9.setCellId("8");
        cellData9.setNoDisturbingImageHidden(false);
        cellData9.setNoDisturbingImage("weixin_conversationlist_no_disturbing_image");
        cellData9.setTime("下午7:18");
        cellData9.setTitle("运动旅游活动群");
        cellData9.setLatestMessage("摄影师丰枫：这个可以有");
        cellData9.setClickable(true);
        cellData9.setLeftImage("weixin_conversationlist_group_image");
        list.add(cellData9);

        return list;
    }

    private class ListViewAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
        private static final int ITEM_TYPE_CONVERSATIONLISTLOGINSTATUSCELL = 0;
        private static final int ITEM_TYPE_CONVERSATIONLISTCONVERSATIONCELL = 1;

        private List<Object> dataList;

        public ListViewAdapter(List<Object> dataList) {
            this.dataList = dataList;
        }

        @Override
        public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
            LayoutInflater layoutInflater = LayoutInflater.from(getActivity());
            if (viewType == ITEM_TYPE_CONVERSATIONLISTLOGINSTATUSCELL)  {
                ConversationListLoginStatusCellViewHolder viewHolder = new ConversationListLoginStatusCellViewHolder(layoutInflater, parent);
                return viewHolder;
            }
            else if (viewType == ITEM_TYPE_CONVERSATIONLISTCONVERSATIONCELL)  {
                ConversationListConversationCellViewHolder viewHolder = new ConversationListConversationCellViewHolder(layoutInflater, parent);
                return viewHolder;
            }
            else 
                return null;
        }

        @Override
        public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
            Object data = dataList.get(position);
            if (holder instanceof ConversationListLoginStatusCellViewHolder) {
		        ConversationListLoginStatusCellViewHolder viewHolder = (ConversationListLoginStatusCellViewHolder)holder;
		        ConversationListLoginStatusCellData conversationListLoginStatusCellData = (ConversationListLoginStatusCellData)data;
                viewHolder.bind(conversationListLoginStatusCellData);
                boolean clickable = conversationListLoginStatusCellData.getClickable();
                if (clickable) {
                    viewHolder.itemView.setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View view) {

                        }
                    });
                } else {
                    viewHolder.itemView.setOnClickListener(null);
                }
            }
            else if (holder instanceof ConversationListConversationCellViewHolder) {
		        ConversationListConversationCellViewHolder viewHolder = (ConversationListConversationCellViewHolder)holder;
		        ConversationListConversationCellData conversationListConversationCellData = (ConversationListConversationCellData)data;
                viewHolder.bind(conversationListConversationCellData);
                boolean clickable = conversationListConversationCellData.getClickable();
                if (clickable) {
                    viewHolder.itemView.setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View view) {

                        }
                    });
                } else {
                    viewHolder.itemView.setOnClickListener(null);
                }
            }
        }

        @Override
        public int getItemViewType(int position) {
            Object data = dataList.get(position);
            if (data instanceof ConversationListLoginStatusCellData)
                return ITEM_TYPE_CONVERSATIONLISTLOGINSTATUSCELL;
            else if (data instanceof ConversationListConversationCellData)
                return ITEM_TYPE_CONVERSATIONLISTCONVERSATIONCELL;
            else
                return -1;
        }

        @Override
        public int getItemCount() {
            return dataList.size();
        }

    }



}




