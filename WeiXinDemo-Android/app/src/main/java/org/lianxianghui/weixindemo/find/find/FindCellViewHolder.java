package org.lianxianghui.weixindemo.find.find;

import androidx.core.graphics.drawable.RoundedBitmapDrawable;
import android.widget.Space;
import android.view.LayoutInflater;
import android.widget.TextView;
import android.view.ViewGroup;
import android.view.View;
import androidx.constraintlayout.widget.ConstraintLayout;
import android.graphics.BitmapFactory;
import org.lianxianghui.weixindemo.R;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.core.graphics.drawable.RoundedBitmapDrawableFactory;
import androidx.appcompat.widget.AppCompatImageView;
import android.view.KeyEvent;
import android.graphics.Bitmap;
import android.content.Intent;
import androidx.recyclerview.widget.RecyclerView;

/**
* Generated by Sketch2Code
* Created by lianxianghui on 21-08-6.
*/

public class FindCellViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
    private FindCellData mFindCellData;

    private View mBottomLine;
    private AppCompatImageView mLeftImage;
    private AppCompatTextView mName;
    private AppCompatImageView mRightIcon;
    private AppCompatImageView mRightHeadImage;
    private AppCompatImageView mCircle;
    private AppCompatTextView mRightLabel;
    private Space mPointForCenterxOfCircle;
    private Space mPointForCenteryOfCircle;

    public FindCellViewHolder(LayoutInflater inflater, ViewGroup parent) {
        super(inflater.inflate(R.layout.find_cell, parent, false));
        View v = itemView;
        mBottomLine = v.findViewById(R.id.bottom_line);
        mLeftImage = (AppCompatImageView) v.findViewById(R.id.left_image);
        mName = (AppCompatTextView) v.findViewById(R.id.name);
        mRightIcon = (AppCompatImageView) v.findViewById(R.id.right_icon);
        mRightHeadImage = (AppCompatImageView) v.findViewById(R.id.right_head_image);
        mCircle = (AppCompatImageView) v.findViewById(R.id.circle);
        mRightLabel = (AppCompatTextView) v.findViewById(R.id.right_label);
        mPointForCenterxOfCircle = (Space) v.findViewById(R.id.point_for_centerx_of_circle);
        mPointForCenteryOfCircle = (Space) v.findViewById(R.id.point_for_centery_of_circle);
    }

    public void bind(FindCellData findCell) {
        mFindCellData = findCell;
        mName.setText(mFindCellData.getName());
        mRightLabel.setText(mFindCellData.getRightLabel());
        String imageName = mFindCellData.getLeftImage();
        if (imageName != null) {
            int leftImageResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (leftImageResId != 0)
                mLeftImage.setImageResource(leftImageResId);
        }
        imageName = mFindCellData.getRightIcon();
        if (imageName != null) {
            int rightIconResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (rightIconResId != 0)
                mRightIcon.setImageResource(rightIconResId);
        }
        imageName = mFindCellData.getRightHeadImage();
        if (imageName != null) {
            int rightHeadImageResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (rightHeadImageResId != 0)
                mRightHeadImage.setImageResource(rightHeadImageResId);
        }
        imageName = mFindCellData.getCircle();
        if (imageName != null) {
            int circleResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (circleResId != 0)
                mCircle.setImageResource(circleResId);
        }
        boolean clickable = mFindCellData.getClickable();
        if (clickable) {
            itemView.setEnabled(true);
            itemView.setOnClickListener(this);
        } else {
            itemView.setEnabled(false);
            itemView.setOnClickListener(null);
        }
        boolean hidden = mFindCellData.getRightLabelHidden();
        if (hidden)
            mRightLabel.setVisibility(View.INVISIBLE);
        else
            mRightLabel.setVisibility(View.VISIBLE);
        hidden = mFindCellData.getRightHeadImageHidden();
        if (hidden)
            mRightHeadImage.setVisibility(View.INVISIBLE);
        else
            mRightHeadImage.setVisibility(View.VISIBLE);
        hidden = mFindCellData.getCircleHidden();
        if (hidden)
            mCircle.setVisibility(View.INVISIBLE);
        else
            mCircle.setVisibility(View.VISIBLE);
    }

    @Override
    public void onClick(View view) {

    }







}

class FindCellData {
    private boolean mCircleHidden;
    private String mRightHeadImage;
    private String mCellId;
    private boolean mClickable;
    private boolean mRightLabelHidden;
    private String mLeftImage;
    private boolean mRightHeadImageHidden;
    private String mRightLabel;
    private String mCircle;
    private String mRightIcon;
    private String mName;

    public boolean getCircleHidden() {
        return mCircleHidden;
    }

    public void setCircleHidden(boolean circleHidden) {
        mCircleHidden = circleHidden;
    }
    public String getRightHeadImage() {
        return mRightHeadImage;
    }

    public void setRightHeadImage(String rightHeadImage) {
        mRightHeadImage = rightHeadImage;
    }
    public String getCellId() {
        return mCellId;
    }

    public void setCellId(String cellId) {
        mCellId = cellId;
    }
    public boolean getClickable() {
        return mClickable;
    }

    public void setClickable(boolean clickable) {
        mClickable = clickable;
    }
    public boolean getRightLabelHidden() {
        return mRightLabelHidden;
    }

    public void setRightLabelHidden(boolean rightLabelHidden) {
        mRightLabelHidden = rightLabelHidden;
    }
    public String getLeftImage() {
        return mLeftImage;
    }

    public void setLeftImage(String leftImage) {
        mLeftImage = leftImage;
    }
    public boolean getRightHeadImageHidden() {
        return mRightHeadImageHidden;
    }

    public void setRightHeadImageHidden(boolean rightHeadImageHidden) {
        mRightHeadImageHidden = rightHeadImageHidden;
    }
    public String getRightLabel() {
        return mRightLabel;
    }

    public void setRightLabel(String rightLabel) {
        mRightLabel = rightLabel;
    }
    public String getCircle() {
        return mCircle;
    }

    public void setCircle(String circle) {
        mCircle = circle;
    }
    public String getRightIcon() {
        return mRightIcon;
    }

    public void setRightIcon(String rightIcon) {
        mRightIcon = rightIcon;
    }
    public String getName() {
        return mName;
    }

    public void setName(String name) {
        mName = name;
    }
}
