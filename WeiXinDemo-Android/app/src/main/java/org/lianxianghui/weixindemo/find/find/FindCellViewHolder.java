package org.lianxianghui.weixindemo.find.find;

import androidx.core.graphics.drawable.RoundedBitmapDrawable;
import android.widget.Space;
import android.view.LayoutInflater;
import android.widget.TextView;
import android.view.ViewGroup;
import android.view.View;
import androidx.constraintlayout.widget.ConstraintLayout;
import android.graphics.BitmapFactory;
import org.lianxianghui.weixindemo.R;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.core.graphics.drawable.RoundedBitmapDrawableFactory;
import androidx.appcompat.widget.AppCompatImageView;
import android.view.KeyEvent;
import android.graphics.Bitmap;
import android.content.Intent;
import androidx.recyclerview.widget.RecyclerView;

/**
* Generated by Sketch2Code
* Created by lianxianghui on 21-08-18.
*/

public class FindCellViewHolder extends RecyclerView.ViewHolder {
    private FindCellData findCellData;

    public final View bottomLine;
    public final AppCompatImageView leftImage;
    public final AppCompatTextView name;
    public final AppCompatImageView rightIcon;
    public final AppCompatImageView rightHeadImage;
    public final AppCompatImageView circle;
    public final AppCompatTextView rightLabel;
    public final Space pointForCenterxOfCircle;
    public final Space pointForCenteryOfCircle;

    public FindCellViewHolder(LayoutInflater inflater, ViewGroup parent) {
        super(inflater.inflate(R.layout.find_cell, parent, false));
        View v = itemView;
        bottomLine = v.findViewById(R.id.bottom_line);
        leftImage = (AppCompatImageView) v.findViewById(R.id.left_image);
        name = (AppCompatTextView) v.findViewById(R.id.name);
        rightIcon = (AppCompatImageView) v.findViewById(R.id.right_icon);
        rightHeadImage = (AppCompatImageView) v.findViewById(R.id.right_head_image);
        circle = (AppCompatImageView) v.findViewById(R.id.circle);
        rightLabel = (AppCompatTextView) v.findViewById(R.id.right_label);
        pointForCenterxOfCircle = (Space) v.findViewById(R.id.point_for_centerx_of_circle);
        pointForCenteryOfCircle = (Space) v.findViewById(R.id.point_for_centery_of_circle);
    }

    public void bind(FindCellData findCellData) {
        this.findCellData = findCellData;
        name.setText(findCellData.getName());
        rightLabel.setText(findCellData.getRightLabel());
        String imageName = findCellData.getLeftImage();
        if (imageName != null) {
            int leftImageResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (leftImageResId != 0)
                leftImage.setImageResource(leftImageResId);
        }
        imageName = findCellData.getRightIcon();
        if (imageName != null) {
            int rightIconResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (rightIconResId != 0)
                rightIcon.setImageResource(rightIconResId);
        }
        imageName = findCellData.getRightHeadImage();
        if (imageName != null) {
            int rightHeadImageResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (rightHeadImageResId != 0)
                rightHeadImage.setImageResource(rightHeadImageResId);
        }
        imageName = findCellData.getCircle();
        if (imageName != null) {
            int circleResId = itemView.getResources().getIdentifier(imageName, "drawable", "org.lianxianghui.weixindemo");
            if (circleResId != 0)
                circle.setImageResource(circleResId);
        }
        boolean clickable = findCellData.getClickable();
        if (clickable) {
            itemView.setEnabled(true);
        } else {
            itemView.setEnabled(false);
        }
        boolean hidden = findCellData.getRightLabelHidden();
        if (hidden)
            rightLabel.setVisibility(View.INVISIBLE);
        else
            rightLabel.setVisibility(View.VISIBLE);
        hidden = findCellData.getRightHeadImageHidden();
        if (hidden)
            rightHeadImage.setVisibility(View.INVISIBLE);
        else
            rightHeadImage.setVisibility(View.VISIBLE);
        hidden = findCellData.getCircleHidden();
        if (hidden)
            circle.setVisibility(View.INVISIBLE);
        else
            circle.setVisibility(View.VISIBLE);
    }

    public FindCellData getFindCellData() {
        return findCellData;
    }







}

class FindCellData {
    private boolean circleHidden;
    private String rightHeadImage;
    private String cellId;
    private boolean clickable;
    private boolean rightLabelHidden;
    private String leftImage;
    private boolean rightHeadImageHidden;
    private String rightLabel;
    private String circle;
    private String rightIcon;
    private String name;

    public boolean getCircleHidden() {
        return circleHidden;
    }
    public void setCircleHidden(boolean circleHidden) {
        this.circleHidden = circleHidden;
    }

    public String getRightHeadImage() {
        return rightHeadImage;
    }
    public void setRightHeadImage(String rightHeadImage) {
        this.rightHeadImage = rightHeadImage;
    }

    public String getCellId() {
        return cellId;
    }
    public void setCellId(String cellId) {
        this.cellId = cellId;
    }

    public boolean getClickable() {
        return clickable;
    }
    public void setClickable(boolean clickable) {
        this.clickable = clickable;
    }

    public boolean getRightLabelHidden() {
        return rightLabelHidden;
    }
    public void setRightLabelHidden(boolean rightLabelHidden) {
        this.rightLabelHidden = rightLabelHidden;
    }

    public String getLeftImage() {
        return leftImage;
    }
    public void setLeftImage(String leftImage) {
        this.leftImage = leftImage;
    }

    public boolean getRightHeadImageHidden() {
        return rightHeadImageHidden;
    }
    public void setRightHeadImageHidden(boolean rightHeadImageHidden) {
        this.rightHeadImageHidden = rightHeadImageHidden;
    }

    public String getRightLabel() {
        return rightLabel;
    }
    public void setRightLabel(String rightLabel) {
        this.rightLabel = rightLabel;
    }

    public String getCircle() {
        return circle;
    }
    public void setCircle(String circle) {
        this.circle = circle;
    }

    public String getRightIcon() {
        return rightIcon;
    }
    public void setRightIcon(String rightIcon) {
        this.rightIcon = rightIcon;
    }

    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }

}
